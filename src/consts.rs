use ark_bn254::{Fq2, G2Affine};
use ark_ff::MontFp;

pub const BYTES_PER_FIELD_ELEMENT: usize = 32;
pub const SIZE_OF_G1_AFFINE_COMPRESSED: usize = 32; // in bytes

/// Ref: https://github.com/ethereum/consensus-specs/blob/master/specs/deneb/polynomial-commitments.md#blob
pub const FIAT_SHAMIR_PROTOCOL_DOMAIN: &[u8] = b"EIGENDA_FSBLOBVERIFY_V1_"; // Adapted from 4844

/// Ref: https://github.com/ethereum/consensus-specs/blob/master/specs/deneb/polynomial-commitments.md#blob
pub const RANDOM_CHALLENGE_KZG_BATCH_DOMAIN: &[u8] = b"EIGENDA_RCKZGBATCH___V1_"; // Adapted from 4844

pub const G2_TAU_FOR_TEST_SRS_3000: G2Affine = G2Affine::new_unchecked(
    Fq2::new(
        MontFp!("7912312892787135728292535536655271843828059318189722219035249994421084560563"),
        MontFp!("21039730876973405969844107393779063362038454413254731404052240341412356318284"),
    ),
    Fq2::new(
        MontFp!("18697407556011630376420900106252341752488547575648825575049647403852275261247"),
        MontFp!("7586489485579523767759120334904353546627445333297951253230866312564920951171"),
    ),
);

pub const G2_TAU_FOR_MAINNET_SRS: G2Affine = G2Affine::new_unchecked(
    Fq2::new(
        MontFp!("19394299006376106554626551996044114846855237028623244664226757033024550999552"),
        MontFp!("10478571113809844268398751534081669357808742555529167819607714577862447855483"),
    ),
    Fq2::new(
        MontFp!("9205262336805673656533560220225620941045451042642528799409071118332922267006"),
        MontFp!("10552783866161062341197740743287753408530108186218052255509661543860392060676"),
    ),
);

// This is the G2 Tau for the MAINNET SRS points.
pub const MAINNET_SRS_G1_SIZE: usize = 131072;
